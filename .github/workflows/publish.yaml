name: 'Publish'

on:
  workflow_dispatch:
    inputs:
      next_version:
        type: 'string'
        description: 'version (e.g. 3.4.0-alpha.0)'
        required: true
      skip_publish:
        type: 'boolean'
        description: 'mark in case only the version update shall be executed, skipping the release to npm'
        required: true
      skip_push:
        type: 'boolean'
        description: 'mark in case the version update shall not be pushed back to the repository'
        required: true
      stable_release:
        type: 'boolean'
        description: 'mark in case this is a full stable release (flag is ignored in case publish is skipped)'
        required: true

jobs:
  publish:
    permissions:
      contents: 'write'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'

      - name: 'Configure Git Credentials'
        run: |
          git config user.name "feld-ai-publish[bot]"
          git config user.email "feld-ai-publish@feld.ai"

      - name: 'Setup node'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@feld-ai'

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: 'Install Packages'
        run: 'pnpm i --frozen-lockfile'

      - name: Replace package names in core
        run: |
          find  . -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.json" -o -name "*.yaml"  \) -not -path "*/node_modules/*" -not -path "*/dist/*" -exec sed -i  's/@jsonforms\/core/@feld-ai\/jsonforms-core/g' {} +
          find  . -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.json" -o -name "*.yaml"  \) -not -path "*/node_modules/*" -not -path "*/dist/*" -exec sed -i  's/@jsonforms\/angular/@feld-ai\/jsonforms-angular/g' {} +
          find  . -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.json" -o -name "*.yaml"  \) -not -path "*/node_modules/*" -not -path "*/dist/*" -exec sed -i  's/@jsonforms\/angular-material/@feld-ai\/jsonforms-angular-material/g' {} +


      - name: 'Build'
        run: 'pnpm run build --scope "@feld-ai/*"'

      - name: 'Test'
        run: 'pnpm run test  --scope "@feld-ai/*"'

      - name: 'Versioning'
        run: 'pnpm exec lerna version ${{ github.event.inputs.next_version }} --no-push --force-publish --yes'

      - name: 'Adjust PeerDependencies'
        run: |
          cd packages/angular && pnpm pkg set peerDependencies.@feld-ai/jsonforms-core="${{ github.event.inputs.next_version }}"
          cd ../angular-material && pnpm pkg set peerDependencies.@feld-ai/jsonforms-core="${{ github.event.inputs.next_version }}" && pnpm pkg set peerDependencies.@feld-ai\/jsonforms-angular="${{ github.event.inputs.next_version }}"

      - name: 'Tag and Commit'
        run: |
          git add -A && git commit --amend --no-edit
          git tag v${{ github.event.inputs.next_version }} -f

      # - name: 'push'
      #   if: github.event.inputs.skip_push == 'false'
      #   run: |
      #     git push
      #     git push origin v${{ github.event.inputs.next_version }}

      - name: 'Publish to GitHub Packages'
        if: github.event.inputs.skip_publish == 'false'
        run: |
          cd packages/core && pnpm publish ${{  github.event.inputs.stable_release == 'true' && ' ' || '--tag next' }}
          cd ../angular && pnpm publish ${{  github.event.inputs.stable_release == 'true' && ' ' || '--tag next' }}
          cd ../angular-material && pnpm publish ${{  github.event.inputs.stable_release == 'true' && ' ' || '--tag next' }}
        env:
          NODE_AUTH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
